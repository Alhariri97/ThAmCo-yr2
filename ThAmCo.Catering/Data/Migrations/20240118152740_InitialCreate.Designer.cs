// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ThAmCo.Catering.Data;

#nullable disable

namespace ThAmCo.Catering.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240118152740_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.22");

            modelBuilder.Entity("ThAmCo.Catering.Models.FoodBooking", b =>
                {
                    b.Property<int>("FoodBookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ClientReferenceId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("FoodBookingDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("MenuId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NumberOfGuests")
                        .HasColumnType("INTEGER");

                    b.HasKey("FoodBookingId");

                    b.HasIndex("MenuId");

                    b.ToTable("FoodBookings");

                    b.HasData(
                        new
                        {
                            FoodBookingId = 1,
                            ClientReferenceId = 1,
                            FoodBookingDate = new DateTime(2024, 1, 19, 15, 27, 40, 571, DateTimeKind.Local).AddTicks(6737),
                            MenuId = 1,
                            NumberOfGuests = 1
                        },
                        new
                        {
                            FoodBookingId = 2,
                            ClientReferenceId = 2,
                            FoodBookingDate = new DateTime(2024, 1, 20, 15, 27, 40, 571, DateTimeKind.Local).AddTicks(6769),
                            MenuId = 2,
                            NumberOfGuests = 2
                        },
                        new
                        {
                            FoodBookingId = 3,
                            FoodBookingDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MenuId = 1,
                            NumberOfGuests = 51
                        });
                });

            modelBuilder.Entity("ThAmCo.Catering.Models.FoodItem", b =>
                {
                    b.Property<int>("FoodItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<float>("UnitPrice")
                        .HasColumnType("REAL");

                    b.HasKey("FoodItemId");

                    b.ToTable("FoodItems");

                    b.HasData(
                        new
                        {
                            FoodItemId = 1,
                            Description = "Fresh vegetable salad with dressing",
                            Name = "Salad",
                            UnitPrice = 9.99f
                        },
                        new
                        {
                            FoodItemId = 2,
                            Description = "Pasta with tomato sauce and assorted vegetables",
                            Name = "Pasta",
                            UnitPrice = 12.99f
                        },
                        new
                        {
                            FoodItemId = 3,
                            Description = "Assorted vegetables grilled to perfection",
                            Name = "Vegetable Skewers",
                            UnitPrice = 11.99f
                        },
                        new
                        {
                            FoodItemId = 4,
                            Description = "Pizza with a variety of vegetarian toppings",
                            Name = "Vegetarian Pizza",
                            UnitPrice = 14.99f
                        },
                        new
                        {
                            FoodItemId = 5,
                            Description = "Quiche filled with spinach, mushrooms, and cheese",
                            Name = "Spinach and Mushroom Quiche",
                            UnitPrice = 13.99f
                        },
                        new
                        {
                            FoodItemId = 6,
                            Description = "Baked eggplant with marinara sauce and cheese",
                            Name = "Eggplant Parmesan",
                            UnitPrice = 10.99f
                        },
                        new
                        {
                            FoodItemId = 7,
                            Description = "Sushi roll with avocado, cucumber, and other veggies",
                            Name = "Vegetarian Sushi Roll",
                            UnitPrice = 16.99f
                        },
                        new
                        {
                            FoodItemId = 8,
                            Description = "Assorted vegetables stir-fried in a savory sauce",
                            Name = "Vegetable Stir Fry",
                            UnitPrice = 9.99f
                        },
                        new
                        {
                            FoodItemId = 9,
                            Description = "Tomatoes, mozzarella, and basil drizzled with balsamic glaze",
                            Name = "Caprese Salad",
                            UnitPrice = 8.99f
                        },
                        new
                        {
                            FoodItemId = 10,
                            Description = "Plant-based burger with all the fixings",
                            Name = "Vegetarian Burger",
                            UnitPrice = 12.99f
                        },
                        new
                        {
                            FoodItemId = 11,
                            Description = "Fresh salmon fillet grilled to perfection",
                            Name = "Grilled Salmon",
                            UnitPrice = 18.99f
                        },
                        new
                        {
                            FoodItemId = 12,
                            Description = "Shrimp sautéed in garlic, butter, and white wine sauce",
                            Name = "Shrimp Scampi",
                            UnitPrice = 16.99f
                        },
                        new
                        {
                            FoodItemId = 13,
                            Description = "Butter-poached lobster tail served with drawn butter",
                            Name = "Lobster Tail",
                            UnitPrice = 29.99f
                        },
                        new
                        {
                            FoodItemId = 14,
                            Description = "Spanish rice dish with a mix of seafood, saffron, and vegetables",
                            Name = "Seafood Paella",
                            UnitPrice = 24.99f
                        },
                        new
                        {
                            FoodItemId = 15,
                            Description = "Delicious crab cakes made with lump crab meat and spices",
                            Name = "Crab Cakes",
                            UnitPrice = 21.99f
                        },
                        new
                        {
                            FoodItemId = 16,
                            Description = "Creamy soup with tender clams, potatoes, and vegetables",
                            Name = "Clam Chowder",
                            UnitPrice = 14.99f
                        },
                        new
                        {
                            FoodItemId = 17,
                            Description = "Soft tacos filled with grilled fish, coleslaw, and salsa",
                            Name = "Fish Tacos",
                            UnitPrice = 12.99f
                        },
                        new
                        {
                            FoodItemId = 18,
                            Description = "Mussels cooked in a flavorful marinara sauce",
                            Name = "Mussels Marinara",
                            UnitPrice = 17.99f
                        },
                        new
                        {
                            FoodItemId = 19,
                            Description = "Assorted sushi rolls with fresh fish and rice",
                            Name = "Sushi Assortment",
                            UnitPrice = 23.99f
                        },
                        new
                        {
                            FoodItemId = 20,
                            Description = "Oysters topped with a rich mixture of herbs, spinach, and breadcrumbs",
                            Name = "Oysters Rockefeller",
                            UnitPrice = 19.99f
                        },
                        new
                        {
                            FoodItemId = 21,
                            Description = "Juicy beef steak cooked to your liking",
                            Name = "Beef Steak",
                            UnitPrice = 22.99f
                        },
                        new
                        {
                            FoodItemId = 22,
                            Description = "Creamy Alfredo sauce with grilled chicken and pasta",
                            Name = "Chicken Alfredo Pasta",
                            UnitPrice = 17.99f
                        },
                        new
                        {
                            FoodItemId = 23,
                            Description = "Tender pork ribs slow-cooked and glazed with barbecue sauce",
                            Name = "Pork Ribs",
                            UnitPrice = 19.99f
                        },
                        new
                        {
                            FoodItemId = 24,
                            Description = "Spicy lamb curry with aromatic herbs and spices",
                            Name = "Lamb Curry",
                            UnitPrice = 20.99f
                        },
                        new
                        {
                            FoodItemId = 25,
                            Description = "Shrimp wrapped in crispy bacon and grilled to perfection",
                            Name = "Bacon Wrapped Shrimp",
                            UnitPrice = 16.99f
                        },
                        new
                        {
                            FoodItemId = 26,
                            Description = "Pizza topped with a variety of sausages and cheese",
                            Name = "Sausage Pizza",
                            UnitPrice = 14.99f
                        },
                        new
                        {
                            FoodItemId = 27,
                            Description = "Burrito filled with seasoned beef, beans, and rice",
                            Name = "Beef Burrito",
                            UnitPrice = 12.99f
                        },
                        new
                        {
                            FoodItemId = 28,
                            Description = "Spicy or BBQ chicken wings served with dipping sauce",
                            Name = "Chicken Wings",
                            UnitPrice = 11.99f
                        },
                        new
                        {
                            FoodItemId = 29,
                            Description = "Soft tacos filled with grilled steak, onions, and cilantro",
                            Name = "Steak Tacos",
                            UnitPrice = 18.99f
                        },
                        new
                        {
                            FoodItemId = 30,
                            Description = "Classic sandwich with ham, cheese, and fresh vegetables",
                            Name = "Ham and Cheese Sandwich",
                            UnitPrice = 9.99f
                        });
                });

            modelBuilder.Entity("ThAmCo.Catering.Models.Menu", b =>
                {
                    b.Property<int>("MenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("MenuName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("MenuId");

                    b.ToTable("Menus");

                    b.HasData(
                        new
                        {
                            MenuId = 1,
                            MenuName = "Vegetarian Menu"
                        },
                        new
                        {
                            MenuId = 3,
                            MenuName = "Seafood Menu"
                        },
                        new
                        {
                            MenuId = 2,
                            MenuName = "Non-Vegetarian Menu"
                        });
                });

            modelBuilder.Entity("ThAmCo.Catering.Models.MenuFoodItem", b =>
                {
                    b.Property<int>("MenuId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FoodItemId")
                        .HasColumnType("INTEGER");

                    b.HasKey("MenuId", "FoodItemId");

                    b.HasIndex("FoodItemId");

                    b.ToTable("MenuFoodItems");

                    b.HasData(
                        new
                        {
                            MenuId = 1,
                            FoodItemId = 1
                        },
                        new
                        {
                            MenuId = 1,
                            FoodItemId = 2
                        },
                        new
                        {
                            MenuId = 1,
                            FoodItemId = 3
                        },
                        new
                        {
                            MenuId = 1,
                            FoodItemId = 4
                        },
                        new
                        {
                            MenuId = 1,
                            FoodItemId = 5
                        },
                        new
                        {
                            MenuId = 1,
                            FoodItemId = 6
                        },
                        new
                        {
                            MenuId = 1,
                            FoodItemId = 7
                        },
                        new
                        {
                            MenuId = 1,
                            FoodItemId = 8
                        },
                        new
                        {
                            MenuId = 1,
                            FoodItemId = 9
                        },
                        new
                        {
                            MenuId = 1,
                            FoodItemId = 10
                        },
                        new
                        {
                            MenuId = 2,
                            FoodItemId = 11
                        },
                        new
                        {
                            MenuId = 2,
                            FoodItemId = 12
                        },
                        new
                        {
                            MenuId = 2,
                            FoodItemId = 13
                        },
                        new
                        {
                            MenuId = 2,
                            FoodItemId = 14
                        },
                        new
                        {
                            MenuId = 2,
                            FoodItemId = 15
                        },
                        new
                        {
                            MenuId = 2,
                            FoodItemId = 16
                        },
                        new
                        {
                            MenuId = 2,
                            FoodItemId = 17
                        },
                        new
                        {
                            MenuId = 2,
                            FoodItemId = 18
                        },
                        new
                        {
                            MenuId = 2,
                            FoodItemId = 19
                        },
                        new
                        {
                            MenuId = 2,
                            FoodItemId = 20
                        },
                        new
                        {
                            MenuId = 3,
                            FoodItemId = 21
                        },
                        new
                        {
                            MenuId = 3,
                            FoodItemId = 22
                        },
                        new
                        {
                            MenuId = 3,
                            FoodItemId = 23
                        },
                        new
                        {
                            MenuId = 3,
                            FoodItemId = 24
                        },
                        new
                        {
                            MenuId = 3,
                            FoodItemId = 25
                        },
                        new
                        {
                            MenuId = 3,
                            FoodItemId = 26
                        },
                        new
                        {
                            MenuId = 3,
                            FoodItemId = 27
                        },
                        new
                        {
                            MenuId = 3,
                            FoodItemId = 28
                        },
                        new
                        {
                            MenuId = 3,
                            FoodItemId = 29
                        },
                        new
                        {
                            MenuId = 3,
                            FoodItemId = 30
                        });
                });

            modelBuilder.Entity("ThAmCo.Catering.Models.FoodBooking", b =>
                {
                    b.HasOne("ThAmCo.Catering.Models.Menu", "Menu")
                        .WithMany("FoodBookings")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Menu");
                });

            modelBuilder.Entity("ThAmCo.Catering.Models.MenuFoodItem", b =>
                {
                    b.HasOne("ThAmCo.Catering.Models.FoodItem", "FoodItem")
                        .WithMany("MenuFoodItems")
                        .HasForeignKey("FoodItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ThAmCo.Catering.Models.Menu", "Menu")
                        .WithMany("MenuFoodItems")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("FoodItem");

                    b.Navigation("Menu");
                });

            modelBuilder.Entity("ThAmCo.Catering.Models.FoodItem", b =>
                {
                    b.Navigation("MenuFoodItems");
                });

            modelBuilder.Entity("ThAmCo.Catering.Models.Menu", b =>
                {
                    b.Navigation("FoodBookings");

                    b.Navigation("MenuFoodItems");
                });
#pragma warning restore 612, 618
        }
    }
}
